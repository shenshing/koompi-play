{"version":3,"sources":["components/login.js","components/register.js","layouts/Navbar.js","components/userInfo.js","PrivateRoute.js","components/start.js","utilis/is-empty.js","components/pages/Play.js","components/pages/Result.js","layouts/Logout.js","App.js","serviceWorker.js","index.js"],"names":["Login","useForm","register","handleSubmit","errors","className","onSubmit","data","fetch","method","body","JSON","stringify","user_name","Username","user_password","Password","then","res","text","localStorage","setItem","console","log","decodeToken","jwt","decode","window","location","replace","alert","catch","err","ref","required","minLength","name","type","href","to","Register","headers","Host","user_gender","gender","user_email","Email","phone_number","Phone","for","id","value","class","xmlns","viewBox","d","Navbar","useState","open","setOpne","src","alt","onClick","accessTokenObj","getItem","UserInfo","profile","setProfile","onChange","e","target","modal","setModal","useAxios","url","token","loading","error","user_profile","Authentication","PrivateRoute","Component","component","rest","render","props","Start","Fragment","Helmet","isEmpty","undefined","Object","keys","length","trim","Play","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","previousRandomNumbers","showOptions","handleOptionClick","innerHTML","toLowerCase","correctTimeout","setTimeout","correctAnswer","wrongTimeout","wrongAnswer","prevState","score","correctAnswers","numberOfAnsweredQuestions","endGame","wrongAnswers","Array","from","document","querySelectorAll","forEach","option","style","visibility","handleHints","hints","indexOfAnswer","options","index","randomNumber","Math","round","random","includes","concat","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","endAlert","playerStats","hintsUsed","history","push","swal","this","question","optionA","optionB","optionC","optionD","title","icon","buttons","dangerMode","willClose","timer","React","Result","preventDefault","bind","stats","remark","userScore","toFixed","button","Logout","clear","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bddce4e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n// import axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\n\nconst Login = () => {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    fetch(\"http://localhost:8000/test_login\", {\n      method: \"POST\",\n      // headers: {\n      //   Accept: \"application/json, text/plain, */*\",\n      //   \"Content-type\": \"application/json\",\n      // },\n\n      body: JSON.stringify({\n        user_name: data.Username,\n        user_password: data.Password,\n      }),\n    })\n      .then((res) => res.text())\n      .then((data) => {\n        localStorage.setItem(\"token\", data);\n        console.log(\"data\", data);\n        const decodeToken = jwt.decode(data);\n        console.log(decodeToken);\n        if (decodeToken) {\n          window.location.replace(\"/userinfo\");\n          // fetch(\"http://localhost:\")\n        } else {\n          console.log(data);\n          alert(data);\n        }\n      })\n      .catch((err) => {\n        alert(err);\n        console.log(err.res.data);\n      });\n  };\n\n  return (\n    <div className=\"flex  items-center justify-center h-screen \">\n      <div className=\"w-full max-w-md\">\n        <form\n          className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <h1 className=\"text-gray-900 font-medium flex text-3xl  items-center justify-center mb-10\">\n            Login\n          </h1>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Username\n            </label>\n            <input\n              className=\" appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              ref={register({ required: true, minLength: 1 })}\n              name=\"Username\"\n              type=\"text\"\n            />\n            {errors.Username && (\n              <p className=\"text-red-500 text-xs italic\">First Name required</p>\n            )}\n          </div>\n          <div className=\"mb-6\">\n            <label className=\"block text-gray-700 text-sm font-bold  mb-2\">\n              Password\n            </label>\n            <input\n              className=\" appearance-none border  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              ref={register({ required: true, minLength: 8 })}\n              name=\"Password\"\n              type=\"password\"\n            />\n            {errors.Password && (\n              <p className=\"text-red-500 text-xs italic\">Password required</p>\n            )}\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              Sign In\n            </button>\n            <span\n              className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\"\n              href=\"#\"\n            >\n              Forgot Password?\n            </span>\n          </div>\n          <p>or</p>\n          <span className=\"text-blue-500\">\n            <Link to=\"/register\">register now</Link>\n          </span>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\nconst Register = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data) => {\n    console.log(data);\n    fetch(\"http://localhost:8000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Host: \"localhost:8000\",\n      },\n\n      body: JSON.stringify({\n        user_name: data.Username,\n        user_gender: data.gender,\n        user_email: data.Email,\n        user_password: data.Password,\n        phone_number: data.Phone,\n      }),\n    })\n      .then((res) => res.text())\n      .then((data) => {\n        alert(data);\n      });\n  };\n  return (\n    <div>\n      <div className=\"flex  items-center justify-center h-screen \">\n        <div className=\"w-full max-w-md\">\n          <form\n            className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <h1 className=\"text-gray-900 font-medium flex text-3xl  items-center justify-center mb-10\">\n              Register\n            </h1>\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Name\n              </label>\n              <input\n                className=\" appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                ref={register({ required: true })}\n                name=\"Username\"\n                type=\"text\"\n              />\n              {errors.Username && (\n                <p className=\"text-red-500 text-xs italic\">Username required</p>\n              )}\n            </div>\n            <div\n              // className={errors.lastName ? \"field error\" : \"field\"}\n              className=\"mb-4\"\n            >\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Email\n              </label>\n              <input\n                className=\" appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                ref={register({ required: true, minLength: 5 })}\n                name=\"Email\"\n                type=\"email\"\n              />\n              {errors.Email && (\n                <p className=\"text-red-500 text-xs italic\">Email required</p>\n              )}\n            </div>\n            <div className=\"mb-6\">\n              <label\n                className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                for=\"grid-state\"\n              >\n                Gender\n              </label>\n              <div className=\"relative\">\n                <select\n                  className=\" block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                  id=\"grid-state\"\n                  name=\"gender\"\n                  ref={register({ required: true })}\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </select>\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                  </svg>\n                </div>\n              </div>\n              {errors.gender && (\n                <p className=\"text-red-500 text-xs italic\">Gender required</p>\n              )}\n            </div>\n            <div\n              // className={errors.lastName ? \"field error\" : \"field\"}\n              className=\"mb-4\"\n            >\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Phone Number\n              </label>\n              <input\n                className=\" appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                ref={register({ required: true, minLength: 5 })}\n                name=\"Phone\"\n                type=\"number\"\n              />\n              {errors.Phone && (\n                <p className=\"text-red-500 text-xs italic\">Phone required</p>\n              )}\n            </div>\n            <div className=\"mb-6\">\n              <label className=\"block text-gray-700 text-sm font-bold  mb-2\">\n                Password\n              </label>\n              <input\n                className=\" appearance-none border  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                ref={register({ required: true, minLength: 8 })}\n                name=\"Password\"\n                type=\"password\"\n              />\n              {errors.Password && (\n                <p className=\"text-red-500 text-xs italic\">Password required</p>\n              )}\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <button\n                type=\"submit\"\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n              >\n                Sign Up\n              </button>\n              <div className=\"flex\">\n                <p>Have an account?</p>\n                <span className=\"text-blue-500 pl-2\">\n                  <Link to=\"/login\">Login</Link>\n                </span>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  const [open, setOpne] = useState(false);\n  const toggle = () => {\n    setOpne(!open);\n  };\n  return (\n    <div>\n      <header className=\"sm:items-center bg-gray-900 sm:flex sm:items-center sm:justify-between\">\n        <div className=\"flex justify-between bg-gray-900 px-4 py-3\">\n          <div>\n            <img\n              className=\"h-8 w-auto\"\n              src=\"/img/Koompi-White.png\"\n              alt=\"logo\"\n            />\n          </div>\n          <div className=\"flex\">\n            <button\n              onClick={toggle}\n              className=\"px-2 focus:outline-none hover:text-white focus:text-white sm:hidden \"\n            >\n              <svg\n                className=\"h-6 w-6 fill-current text-gray-500 \"\n                viewBox=\"0 0 24 24\"\n              >\n                {open ? (\n                  <path d=\"M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z\" />\n                ) : (\n                  <path d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n        <div className={open ? \"block sm:hidden\" : \"hidden sm:block\"}>\n          <nav className=\"sm:flex sm:items-center sm:px-4 \">\n            <div className=\"px-2 pt-2 pb-5 border-b border-gray-800 sm:flex sm:border-b-0 sm:py-0\">\n              <Link\n                to=\"/start\"\n                className=\"sm:px-2 sm:text-sm  block px-3 py-1 rounded font-semibold text-white hover:bg-gray-800\"\n                href=\"#\"\n              >\n                Play\n              </Link>\n              <Link\n                to=\"/logout\"\n                className=\"sm:px-2 mt-3 sm:text-sm sm:mt-0 block px-3 py-1 rounded font-semibold text-white hover:bg-gray-800\"\n                href=\"#\"\n              >\n                Logout\n              </Link>\n            </div>\n          </nav>\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// import uuid from \"uuid/v1\";\n// import jwt from \"jsonwebtoken\";\n// import axios from \"axios\";\nimport useAxios from \"axios-hooks\";\nimport Navbar from \"../layouts/Navbar\";\n\nvar accessTokenObj = localStorage.getItem(\"token\");\n\nfunction UserInfo() {\n  const [profile, setProfile] = useState(null);\n\n  const { register } = useForm();\n\n  const onChange = (e) => {\n    // setProfile({ ...profile, [e.target.name]: e.target.value });\n    const target = e.target;\n    const value = target.value;\n    const name = target.value;\n    setProfile({\n      [name]: value,\n    });\n    // console.log(profile);\n  };\n  const [modal, setModal] = useState(false);\n  const popUp = () => {\n    setModal(!modal);\n  };\n\n  const onClose = () => {\n    setModal(false);\n  };\n\n  const cancle = (e) => {\n    setModal(false);\n  };\n\n  const [\n    { data, loading, error },\n    //  refetch\n  ] = useAxios({\n    method: \"get\",\n    url: \"http://localhost:8000/userData2\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      token: accessTokenObj,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n  if (data) {\n    if (profile === null) {\n      setProfile({ ...data });\n    }\n  }\n\n  return (\n    <div>\n      <Navbar />\n\n      <div className=\" flex  items-center justify-center h-screen\">\n        <div className=\" w-full max-w-screen-md\">\n          <div className=\"overflow-hidden bg-white shadow-md rounded  \">\n            <form>\n              <img src=\"/img/cover.jpg\" alt=\"cover\" />\n              <div className=\"px-6 sm:px-3 \">\n                <img\n                  className=\"overflow-hidden -mt-12 sm:-mt-16  h-20 w-20 md:h-32 md:w-32 rounded-full  md:mx-0 \"\n                  // src=\"/img/01-shutterstock_476340928-Irina-Bg.jpg\"\n                  src={profile ? profile.user_profile : \"\"}\n                  alt=\"profile\"\n                />\n                <h1 className=\"mt-2 ml-1 sm:ml-6 text-blue-800 text-xl font-medium\">\n                  {profile ? profile.user_name : \"\"}\n                </h1>\n                <div className=\"flex justify-end mb-2 -mt-16 sm:-mt-20 mr-2\">\n                  <input\n                    type=\"button\"\n                    value=\"Edit Profile\"\n                    onClick={popUp}\n                    className=\"bg-no-repeat border-blue-500 border-2 px-3 py-2 bg-blue-400 rounded-full hover:bg-blue-200 text-white cursor-pointer\"\n                  />\n\n                  {/* </input> */}\n                </div>\n              </div>\n              {/* Popup */}\n\n              <div>\n                <div\n                  className={\n                    modal\n                      ? \"fixed overflow-hidden z-40 -mt-32 items-center justify-center bg-gray-400  rounded-lg p-6\"\n                      : \"hidden\"\n                  }\n                >\n                  <h1 className=\"block mb-5 text-white\">Edit Your Profile</h1>\n                  <label className=\"text-white\">Name</label>\n                  <input\n                    className=\"rounded py-1 px-1 block mb-2\"\n                    // type=\"text\"\n                    // name=\"name\"change profile picture in react js\n                    value={profile ? profile.user_name : \"\"}\n                    ref={register({ required: true, minLength: 5 })}\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={onChange}\n                  />\n                  <label className=\"text-white\">Name</label>\n                  <input\n                    className=\"rounded py-1 px-1 block mb-2\"\n                    // type=\"text\"\n                    // name=\"name\"change profile picture in react js\n                    value={profile ? profile.user_email : \"\"}\n                    ref={register({ required: true, minLength: 5 })}\n                    name=\"name\"\n                    type=\"email\"\n                    onChange={onChange}\n                  />\n                  <label className=\"text-white\">Name</label>\n                  <input\n                    className=\"rounded py-1 px-1 block mb-2\"\n                    // type=\"text\"\n                    // name=\"name\"change profile picture in react js\n                    value={profile ? profile.phone_number : \"\"}\n                    ref={register({ required: true, minLength: 5 })}\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={onChange}\n                  />\n                  <input\n                    onClick={onClose}\n                    // className={errors.name ? \"block\" : \"hidden\"}\n                    type=\"submit\"\n                    className=\"mr-2 mt-5 bg-blue hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                  />\n\n                  <input\n                    type=\"button\"\n                    value=\"Cancel\"\n                    onClick={cancle}\n                    className=\"mr-2 mt-5 hover:bg-red-700 text-white bg-no-repeat font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"ml-6 mt-12 \">\n                <div className=\" px-3 mb-3 \">\n                  <span className=\"text-xs \">Email</span>\n                  <h1\n                    // onClick={popUp}\n                    className=\"-mb-2 font-xl text-lg   \"\n                  >\n                    {profile ? profile.user_email : \"\"}\n                  </h1>\n                </div>\n                <div className=\" px-3 mb-10\">\n                  <span className=\"text-xs \">Phone</span>\n                  <h1\n                    // onClick={popUp}\n                    className=\"-mb-2 font-xl text-lg   \"\n                  >\n                    {profile ? profile.phone_number : \"\"}\n                  </h1>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default UserInfo;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nlet Authentication = localStorage.getItem(\"token\");\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLogin = () => {\n    if (Authentication) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\n\nconst TITLE = \"Koompi play | Quiz\";\n\nconst Start = () => (\n  <React.Fragment>\n    <Helmet>\n      <title>{TITLE}</title>\n    </Helmet>\n    <div id=\"home\">\n      <section id=\"section\">\n        <h1 className=\" header-text text-center text-white\">Quiz App</h1>\n        <ul>\n          <li id=\"button\">\n            <Link to=\"/quiz\">\n              <button id=\"play-button\" className=\"bg-teal-400 w-full text-white font-bold py-2 px-4 mt-48 h-12 rounded-full\">\n                Play{\" \"}\n              </button>\n            </Link>\n          </li>\n        </ul>\n      </section>\n    </div>\n  </React.Fragment>\n);\n\nexport default Start;\n","const isEmpty = (value) =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\n\n  export default isEmpty;","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { RiCoinsLine } from \"react-icons/ri\";\nimport { MdAlarm, MdLiveHelp } from \"react-icons/md\";\n// import M from \"materialize-css\";\nimport swal from \"sweetalert\";\n\nimport questions from \"../data/questions.json\";\nimport isEmpty from \"../../utilis/is-empty\";\n\nconst TITLE = \"Quiz App | Play\";\n\nclass Play extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: \"\",\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 2,\n      previousRandomNumbers: [],\n      time: {},\n    };\n    this.interval = null;\n  }\n\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion,\n    } = this.state;\n    this.displayQuestions(\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    );\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  displayQuestions = (\n    questions = this.state.questions,\n    currentQuestion,\n    nextQuestion,\n    previousQuestion\n  ) => {\n    let { currentQuestionIndex } = this.state;\n    if (!isEmpty(this.state.questions)) {\n      questions = this.state.questions;\n      currentQuestion = questions[currentQuestionIndex];\n      nextQuestion = questions[currentQuestionIndex + 1];\n      previousQuestion = questions[currentQuestionIndex - 1];\n      const answer = currentQuestion.answer;\n      this.setState(\n        {\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: [],\n        },\n        () => {\n          this.showOptions();\n        }\n      );\n    }\n  };\n\n  handleOptionClick = (e) => {\n    if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n      this.correctTimeout = setTimeout(() => {}, 100);\n      this.correctAnswer();\n    } else {\n      this.wrongTimeout = setTimeout(() => {}, 100);\n      this.wrongAnswer();\n    }\n  };\n\n  correctAnswer = () => {\n    // M.toast({\n    //   html: \"Correct Answer!\",\n    //   classes: \"toast-valid\",\n    //   displayLength: 300,\n    // });\n    this.setState(\n      (prevState) => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\n      }),\n      () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(\n            this.state.questions,\n            this.state.currentQuestion,\n            this.state.nextQuestion,\n            this.state.previousQuestion\n          );\n        }\n      }\n    );\n  };\n\n  wrongAnswer = () => {\n    // navigator.vibrate(1000);\n    // M.toast({\n    //   html: \"Wrong Answer!\",\n    //   classes: \"toast-invalid\",\n    //   displayLength: 300,\n    // });\n    this.setState(\n      (prevState) => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\n      }),\n      () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(\n            this.state.questions,\n            this.state.currentQuestion,\n            this.state.nextQuestion,\n            this.state.previousQuestion\n          );\n        }\n      }\n    );\n  };\n\n  showOptions = () => {\n    const options = Array.from(document.querySelectorAll(\".option\"));\n\n    options.forEach((option) => {\n      option.style.visibility = \"visible\";\n    });\n  };\n\n  handleHints = () => {\n    console.log(\"hello\");\n\n    if (this.state.hints > 0) {\n      const options = Array.from(document.querySelectorAll(\".option\"));\n      let indexOfAnswer;\n\n      options.forEach((option, index) => {\n        if (\n          option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()\n        ) {\n          indexOfAnswer = index;\n        }\n      });\n\n      while (true) {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (\n          randomNumber !== indexOfAnswer &&\n          !this.state.previousRandomNumbers.includes(randomNumber)\n        ) {\n          options.forEach((option, index) => {\n            if (index === randomNumber) {\n              option.style.visibility = \"hidden\";\n              this.setState((prevState) => ({\n                hints: prevState.hints - 1,\n                previousRandomNumbers: prevState.previousRandomNumbers.concat(\n                  randomNumber\n                ),\n              }));\n            }\n          });\n          break;\n        }\n        if (this.state.previousRandomNumbers.length >= 3) break;\n      }\n    }\n  };\n\n  startTimer = () => {\n    const countDownTime = Date.now() + 600600;\n    this.interval = setInterval(() => {\n      const now = new Date();\n      const distance = countDownTime - now;\n\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        clearInterval(this.interval);\n        this.setState(\n          {\n            time: {\n              minutes: 0,\n              seconds: 0,\n            },\n          },\n          () => {\n            this.endGame();\n          }\n        );\n      } else {\n        this.setState({\n          time: {\n            minutes,\n            seconds,\n            distance,\n          },\n        });\n      }\n    }, 1000);\n  };\n\n  endGame = () => {\n    {\n      this.endAlert();\n    }\n    const { state } = this;\n    const playerStats = {\n      score: state.score,\n      numberOfQuestions: state.numberOfQuestions,\n      numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n      // correctAnswers: state.correctAnswers,\n      // wrongAnswers: state.wrongAnswers,\n      hintsUsed: 2 - state.hints,\n    };\n    setTimeout(() => {\n      this.props.history.push(\"/Result\", playerStats);\n    }, 2000);\n  };\n\n  endAlert = () => {\n    swal(\"Good job!\", \"Your game has ended!\", \"success\");\n  };\n\n  render() {\n    const quitAlert = () => {\n      swal({\n        title: \"Are you sure to close it?\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      }).then((willClose) => {\n        if (willClose) {\n          swal(\"Thank you so much!\", {\n            icon: \"success\",\n            timer: \"3000\",\n          }).then(() => {\n            this.props.history.push(\"/start\");\n          });\n        }\n      });\n    };\n\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      hints,\n      numberOfQuestions,\n      time,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>{TITLE}</title>\n        </Helmet>\n        <h2 className=\"header mt-12 text-center\">Quiz Time</h2>\n        <form className=\" bg-gray-200 container shadow-xl rounded px-8 pt-6 pb-8 mb-4 mx-auto mt-12 h-full\">\n          <div className=\"lifeline fill-current text-xl p-8 flex justify-between\">\n            <div className=\"text-teal-600\">\n              <RiCoinsLine />\n              {currentQuestionIndex + 1} of {numberOfQuestions}\n            </div>\n            <div className=\"text-red-600\">\n              <MdAlarm /> {time.minutes}:{time.seconds}\n            </div>\n            <div onClick={this.handleHints} className=\"text-blue-600\">\n              <MdLiveHelp />\n              {hints}\n            </div>\n          </div>\n          <div className=\"max-w-4xl mx-auto flex p-8 bg-white rounded-lg shadow-xl h-auto text-2xl\">\n            <h5>{currentQuestion.question}</h5>\n          </div>\n\n          <div className=\"mx-auto \">\n            <div className=\"sm:flex  \">\n              <button\n                type=\"button\"\n                onClick={this.handleOptionClick}\n                className=\"blok mt-3 option bg-teal-400 ml-10 sm:ml-0 w-2/4 sm:w-2/4 lg:w-2/4 xs:w-2/4 text-white font-bold py-3 px-4 rounded-md \"\n              >\n                {currentQuestion.optionA}\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.handleOptionClick}\n                className=\"sm:ml-6 mt-3 block option bg-teal-400 ml-10 sm:ml-0 w-2/4 sm:w-2/4  text-white font-bold py-3 px-4 rounded-md\"\n              >\n                {currentQuestion.optionB}\n              </button>\n            </div>\n            <div className=\"sm:flex mt-3\">\n              <button\n                type=\"button\"\n                onClick={this.handleOptionClick}\n                className=\"block mt-3 option bg-teal-400 ml-10 sm:ml-0 w-2/4 sm:w-2/4 text-white font-bold py-3 px-4 rounded-md\"\n              >\n                {currentQuestion.optionC}\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.handleOptionClick}\n                className=\"mt-3 sm:ml-6 block option bg-teal-400 ml-10 sm:ml-0 w-2/4 sm:w-2/4 text-white font-bold py-3 px-4 rounded-md\"\n              >\n                {currentQuestion.optionD}\n              </button>\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            className=\"mt-10 bg-red-600 hover:bg-red-800 rounded-md\"\n          >\n            <button\n              type=\"button\"\n              className=\"w-32 shadow-lg text-white font-bold py-2 px-4 rounded justify-center text-center\"\n              onClick={quitAlert}\n            >\n              quit\n            </button>\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Play;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { RiMedalLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\nconst TITLE = \"Result | Quiz app\";\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hintsUsed: 0,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { state } = this.props.location;\n    if (state) {\n      this.setState({\n        score: (state.score / state.numberOfQuestions) * 100,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: state.wrongAnswers,\n        hintsUsed: state.hintsUsed,\n      });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    var accessTokenObj = localStorage.getItem(\"token\");\n    // const newResult = {\n    //   score: this.state.score,\n    // };\n    // console.log(accessTokenObj);\n    console.log(\"heo\");\n    fetch(\"http://localhost:8000/play_info\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        token: accessTokenObj,\n      },\n      body: JSON.stringify({\n        score: this.state.correctAnswers,\n      }),\n    }).then((res) => res.text());\n    // .then(data);\n  };\n  render() {\n    const submitAlert = () => {\n      swal({\n        title: \"Thank you so much!\",\n        icon: \"success\",\n        button: \"Ok\",\n        timer: 3000,\n      });\n    };\n\n    const { state } = this.props.location;\n    let stats, remark;\n    const userScore = this.state.score;\n\n    if (userScore <= 30) {\n      remark = \"You need more practice !\";\n    } else if (userScore > 30 && userScore <= 50) {\n      remark = \"Better luck for the next time !\";\n    } else if (userScore > 50 && userScore <= 70) {\n      remark = \"Wow it's better !\";\n    } else if (userScore >= 71 && userScore <= 84) {\n      remark = \"You did it greate!\";\n    } else {\n      remark = \"You're an absolute genuis!\";\n    }\n\n    if (state !== undefined) {\n      stats = (\n        <React.Fragment>\n          <div className=\"m-auto flex justify-center p-0 mt-10\">\n            <span className=\"icon text-indigo-800 text-6xl\">\n              <RiMedalLine />\n            </span>\n          </div>\n          <h2 id=\"result-header\" className=\" text-indigo-800 text-center\">\n            Quiz has ended\n          </h2>\n          <form\n            // onSubmit={this.handleSubmit}\n            className=\"bg-indigo-200 container shadow-xl rounded px-8 pt-6 pb-8 mb-4 mx-auto mt-12 h-full\"\n          >\n            <div className=\"container text-center\">\n              <h3 className=\" container \">{remark}</h3>\n\n              <h4 className=\"text-pink-900\">\n                Your score is: {this.state.score.toFixed(0)}&#37;\n              </h4>\n            </div>\n            <div className=\"container p-12\">\n              <span>\n                Total of the number questions: {this.state.numberOfQuestions}\n              </span>\n              <br />\n              <br />\n              <span>\n                Number of attempted questions:{\" \"}\n                {this.state.numberOfAnsweredQuestions}\n              </span>\n              <br />\n              <br />\n              <span>Number of correctAnswers: {this.state.correctAnswers}</span>\n              <br />\n              <br />\n              <span>Number of incorrectAnswers: {this.state.wrongAnswers}</span>\n              <br />\n              <br />\n              <span>Hints used: {this.state.hintsUsed}</span>\n            </div>\n            <section>\n              <form onSubmit={this.handleSubmit}>\n                <Link to=\"/userinfo\">\n                  <button\n                    onClick={submitAlert}\n                    type=\"submit\"\n                    className=\"w-32 mr-2 bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\n                  >\n                    {\" \"}\n                    Submit\n                  </button>\n                </Link>\n              </form>\n            </section>\n          </form>\n          {/* <form onSubmit={this.handleSubmit}>\n            <div className=\"mb-6\">\n              <label className=\"block text-gray-700 text-sm font-bold  mb-2\">\n                Password\n              </label>\n              <input\n              onChange={}\n                className=\" appearance-none border  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                name=\"Password\"\n                type=\"button\"\n              />\n            </div>\n          </form> */}\n        </React.Fragment>\n      );\n    } else {\n      stats = <h1>No stats available please take a quiz!</h1>;\n    }\n\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>{TITLE}</title>\n        </Helmet>\n        {stats}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Result;\n","const Logout = () => {\n  localStorage.clear(\"token\");\n  window.location.replace(\"/login\");\n};\n\nexport default Logout;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport UserInfo from \"./components/userInfo\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Start from \"./components/start\";\nimport Play from \"./components/pages/Play\";\nimport Result from \"./components/pages/Result\";\nimport Logout from \"./layouts/Logout\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/logout\" component={Logout} />\n          <PrivateRoute exact path=\"/userinfo\" component={UserInfo} />\n          <PrivateRoute exact path=\"/start\" component={Start} />\n          <PrivateRoute exact path=\"/quiz\" component={Play} />\n          <PrivateRoute exact path=\"/result\" component={Result} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}